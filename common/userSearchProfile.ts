import { AppDataSource } from "../src/data-source";
import { SearchSettings } from "../src/entity/SearchSetting";
import { zodiacTypes, 
  persTypes, 
  searchTypes,
  educationTypes, 
  familyPlansTypes,
  loveLangTypes, 
  alcoTypes, 
  smokeTypes, 
  gymTypes, 
  foodTypes, 
  socMediaTypes, 
  commTypes, 
  nightLiveTypes, 
  sexTypes,
  booleanTypes } from "../util/types"

export async function msgSearch(ctx) {
    const chatId = String(ctx.chat.id);
    let settings = await AppDataSource.getRepository(SearchSettings).findOneBy({ chatId });

    if(!settings){
      settings = new SearchSettings();
      settings.chatId = chatId
      await AppDataSource.manager.save(settings)
    }

    let messageText = (`–¢–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–∏—Å–∫–∞:\n–í–æ–∑—Ä–∞—Å—Ç –æ—Ç ${settings.age[0]} –¥–æ ${settings.age[1]}\n–†–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞ ${((settings.radius)/1000)} –∫–º`)
    if(typeof(settings.bio) == 'boolean'){
      messageText += `\n–ù–∞–ª–∏—á–∏–µ –±–∏–æ: ${booleanTypes[settings.bio.toString()]}`
    }
    if(settings.language){
      messageText += `\n–ù–∞–ª–∏—á–∏–µ —è–∑—ã–∫–æ–≤üìñ: ${booleanTypes[String(settings.language)]}`
    }
    if(typeof(settings.zodiac) == 'number'){
      messageText += `\n–ó–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: ${zodiacTypes[settings.zodiac]}üîÆ`
    }
    if(settings.height){
        messageText += `\n–†–æ—Å—Ç: ${settings.height}üìè`
    }
    if(typeof(settings.persType) == 'number'){
        messageText += `\n–¢–∏–ø –ª–∏—á–Ω–æ—Å—Ç–∏: ${persTypes[settings.persType]}‚ôüÔ∏è`
    }
    if(typeof(settings.mySearch) == 'number'){
        messageText += `\n–ò—â–µ—Ç: ${searchTypes[settings.mySearch]}üïµÔ∏è`
    }
    if(typeof(settings.education) == 'number'){
        messageText += `\n–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: ${educationTypes[settings.education]}üìö`
    }
    if(typeof(settings.familyPlans) == 'number'){
        messageText += `\n–ü–ª–∞–Ω—ã –Ω–∞ –±—É–¥—É—â–µ–µ: ${familyPlansTypes[settings.familyPlans]}üë™`
    }

    if(typeof(settings.loveLang) == 'number'){
        messageText += `\n–Ø–∑—ã–∫ –ª—é–±–≤–∏: ${loveLangTypes[settings.loveLang]}üëª`
    }
    if(typeof(settings.work) == 'string'){
        messageText += `\n–ù–∞–ª–∏—á–∏–µ —Ä–∞–±–æ—Ç—ã: ${booleanTypes[String(settings.work)]}üè≠`
    }
    if(typeof(settings.pets) == 'string'){
        messageText += `\n–ù–∞–ª–∏—á–∏–µ –ø–∏—Ç–æ–º—Ü–∞(–µ–≤): ${booleanTypes[String(settings.pets)]}üêà`
    }
    if(typeof(settings.alcohol) == 'number'){
        messageText += `\n–û—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –∞–ª–∫–æ–≥–æ–ª—é: ${alcoTypes[settings.alcohol]}ü•É`
    }
    if(typeof(settings.smoke) == 'number'){
        messageText += `\n–û—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –∫—É—Ä–µ–Ω–∏—é: ${smokeTypes[settings.smoke]}üö¨`
    }
    if(typeof(settings.gym) == 'number'){
        messageText += `\n–û—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ —Å–ø–æ—Ä—Ç—É: ${gymTypes[settings.gym]}üèãÔ∏è‚Äç‚ôÄÔ∏è`
    }
    if(typeof(settings.food) == 'number'){
        messageText += `\n–û—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –ø–∏—Ç–∞–Ω–∏—é: ${foodTypes[settings.food]}üçî`
    }
    if(typeof(settings.socMedia) == 'number'){
        messageText += `\n–û—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –°–æ—Ü–°–µ—Ç—è–º: ${socMediaTypes[settings.socMedia]}üì±`
    }
    if(typeof(settings.commType) == 'number'){
        messageText += `\n–¢–∏–ø –æ–±—â–µ–Ω–∏—è: ${commTypes[settings.commType]}üí¨`
    }
    if(typeof(settings.nightLive) == 'number'){
        messageText += `\n–û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏: ${nightLiveTypes[settings.nightLive]}üí§`
    }
  return messageText
}
